version: '3'
services:
  nginx:
    depends_on:
      - training_postgres
      - client
    restart: always
    build:
      dockerfile: Dockerfile.dev
      context: ./nginx
    ports:
      - '3000:80'
  redis:
    image: 'redis:latest'


  api_postgres:
    image: 'postgres:latest'
    environment:
      - POSTGRES_PASSWORD=postgres_password
    volumes:
      - pg_api_data:/var/lib/postgresql/data

  auth_postgres:
    image: 'postgres:latest'
    environment:
      - POSTGRES_PASSWORD=postgres_password
    volumes:
      - pg_auth_data:/var/lib/postgresql/data
  auth_service:
    build:
      dockerfile: Dockerfile.dev
      context: ./api/auth
    volumes:
      - /app/node_modules
      - ./api/auth:/app
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - PGUSER=postgres
      - PGHOST=auth_postgres
      - PGDATABASE=postgres
      - PGPASSWORD=postgres_password
      - PGPORT=5432
      - JWT_KEY=secretKey
    restart: on-failure


  training_postgres:
    image: 'postgres:latest'
    environment:
      - POSTGRES_PASSWORD=postgres_password
    volumes:
      - pgdata:/var/lib/postgresql/data
  training_service:
    build:
      dockerfile: Dockerfile.dev
      context: ./api/training
    volumes:
      - /app/node_modules
      - ./api/training:/app
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - PGUSER=postgres
      - PGHOST=training_postgres
      - PGDATABASE=postgres
      - PGPASSWORD=postgres_password
      - PGPORT=5432
      - JWT_KEY=secretKey
    restart: on-failure


  lesson_postgres:
    image: 'postgres:latest'
    environment:
      - POSTGRES_PASSWORD=postgres_password
    volumes:
      - pg_lesson_data:/var/lib/postgresql/data
  lesson_service:
    build:
      dockerfile: Dockerfile.dev
      context: ./api/lessons
    volumes:
      - /app/node_modules
      - ./api/lessons:/app
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - PGUSER=postgres
      - PGHOST=lesson_postgres
      - PGDATABASE=postgres
      - PGPASSWORD=postgres_password
      - PGPORT=5432
      - JWT_KEY=secretKey
    restart: on-failure


  grammar_postgres:
    image: 'postgres:latest'
    environment:
      - POSTGRES_PASSWORD=postgres_password
    volumes:
      - pg_grammar_data:/var/lib/postgresql/data
  grammar_service:
    build:
      dockerfile: Dockerfile.dev
      context: ./api/grammar
    volumes:
      - /app/node_modules
      - ./api/grammar:/app
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - PGUSER=postgres
      - PGHOST=grammar_postgres
      - PGDATABASE=postgres
      - PGPASSWORD=postgres_password
      - PGPORT=5432
      - JWT_KEY=secretKey
    restart: on-failure

  
  exercise_postgres:
    image: 'postgres:latest'
    environment:
      - POSTGRES_PASSWORD=postgres_password
    volumes:
      - pg_exercise_data:/var/lib/postgresql/data
  exercise_mongo:
    image: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes: 
      - mongo_exercise_data:/data/db
    restart: always
  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@exercise_mongo:27017/
  exercise_service:
    build:
      dockerfile: Dockerfile.dev
      context: ./api/exercise
    volumes:
      - /app/node_modules
      - ./api/exercise:/app
    environment:
      - JWT_KEY=secretKey
      - MONGO_URI=mongodb://root:example@exercise_mongo:27017/
    restart: on-failure


  client:
    stdin_open: true
    build:
      dockerfile: Dockerfile.dev
      context: ./client
    volumes:
      - /app/node_modules
      - ./client:/app
    restart: on-failure
  worker:
    build:
      dockerfile: Dockerfile.dev
      context: ./worker
    volumes:
      - /app/node_modules
      - ./worker:/app
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
  
  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: pgadmin4@pgadmin.org
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
       - pgadmin:/var/lib/pgadmin

    ports:
      - "5050:80"
    restart: unless-stopped

volumes:
    pgadmin:
    pgdata:
    pg_auth_data:
    pg_lesson_data:
    pg_grammar_data:
    pg_exercise_data:
    mongo_exercise_data:
    pg_api_data: